-- we don't know how to generate database DEFAULT (class Database) :(
create table USERNAMES
(
	ID INT auto_increment,
	USERNAME VARCHAR not null,
	constraint USERS_PK
		primary key (ID)
);

create unique index USERS_ID_UINDEX
	on USERNAMES (ID);

create unique index USERS_USERNAME_UINDEX
	on USERNAMES (USERNAME);

create table POSTS
(
	ID INT auto_increment,
	USERNAME_ID INT not null,
	POST_TEXT VARCHAR,
	POST_TIME TIMESTAMP,
	constraint USERNAME_ID
		foreign key (USERNAME_ID) references USERNAMES (ID)
);

create table COMMENTS
(
	ID INT auto_increment,
	POST_ID INT,
	USERNAME_ID INT,
	COMMENT_TEXT INT,
	COMMENT_TIME TIMESTAMP,
	constraint POST_ID
		foreign key (ID, POST_ID) references POSTS (ID, ID),
	constraint USERNAMES_ID
		foreign key (USERNAME_ID) references USERNAMES (ID)
);

create unique index COMMENTS_ID_UINDEX
	on COMMENTS (ID);

alter table COMMENTS
	add constraint COMMENTS_PK
		primary key (ID);

create unique index POSTS_ID_UINDEX
	on POSTS (ID);

alter table POSTS
	add constraint POSTS_PK
		primary key (ID);

create table INFORMATION_SCHEMA.CATALOGS
(
	CATALOG_NAME VARCHAR
);

create table INFORMATION_SCHEMA.COLLATIONS
(
	KEY VARCHAR,
	NAME VARCHAR
);

create table INFORMATION_SCHEMA.COLUMNS
(
	CHARACTER_MAXIMUM_LENGTH INTEGER,
	CHARACTER_OCTET_LENGTH INTEGER,
	CHARACTER_SET_NAME VARCHAR,
	CHECK_CONSTRAINT VARCHAR,
	COLLATION_NAME VARCHAR,
	COLUMN_DEFAULT VARCHAR,
	COLUMN_NAME VARCHAR,
	COLUMN_ON_UPDATE VARCHAR,
	COLUMN_TYPE VARCHAR,
	DATA_TYPE INTEGER,
	DATETIME_PRECISION INTEGER,
	DOMAIN_CATALOG VARCHAR,
	DOMAIN_NAME VARCHAR,
	DOMAIN_SCHEMA VARCHAR,
	INTERVAL_PRECISION INTEGER,
	INTERVAL_TYPE VARCHAR,
	IS_COMPUTED BOOLEAN,
	IS_NULLABLE VARCHAR,
	IS_VISIBLE VARCHAR,
	NULLABLE INTEGER,
	NUMERIC_PRECISION INTEGER,
	NUMERIC_PRECISION_RADIX INTEGER,
	NUMERIC_SCALE INTEGER,
	ORDINAL_POSITION INTEGER,
	REMARKS VARCHAR,
	SELECTIVITY INTEGER,
	SEQUENCE_NAME VARCHAR,
	SOURCE_DATA_TYPE SMALLINT,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.COLUMN_PRIVILEGES
(
	COLUMN_NAME VARCHAR,
	GRANTEE VARCHAR,
	GRANTOR VARCHAR,
	IS_GRANTABLE VARCHAR,
	PRIVILEGE_TYPE VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.CONSTANTS
(
	CONSTANT_CATALOG VARCHAR,
	CONSTANT_NAME VARCHAR,
	CONSTANT_SCHEMA VARCHAR,
	DATA_TYPE INTEGER,
	ID INTEGER,
	REMARKS VARCHAR,
	SQL VARCHAR
);

create table INFORMATION_SCHEMA.CONSTRAINTS
(
	CHECK_EXPRESSION VARCHAR,
	COLUMN_LIST VARCHAR,
	CONSTRAINT_CATALOG VARCHAR,
	CONSTRAINT_NAME VARCHAR,
	CONSTRAINT_SCHEMA VARCHAR,
	CONSTRAINT_TYPE VARCHAR,
	ID INTEGER,
	REMARKS VARCHAR,
	SQL VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR,
	UNIQUE_INDEX_NAME VARCHAR
);

create table INFORMATION_SCHEMA.CROSS_REFERENCES
(
	DEFERRABILITY SMALLINT,
	DELETE_RULE SMALLINT,
	FKCOLUMN_NAME VARCHAR,
	FKTABLE_CATALOG VARCHAR,
	FKTABLE_NAME VARCHAR,
	FKTABLE_SCHEMA VARCHAR,
	FK_NAME VARCHAR,
	ORDINAL_POSITION SMALLINT,
	PKCOLUMN_NAME VARCHAR,
	PKTABLE_CATALOG VARCHAR,
	PKTABLE_NAME VARCHAR,
	PKTABLE_SCHEMA VARCHAR,
	PK_NAME VARCHAR,
	UPDATE_RULE SMALLINT
);

create table INFORMATION_SCHEMA.DOMAINS
(
	CHECK_CONSTRAINT VARCHAR,
	COLUMN_DEFAULT VARCHAR,
	DATA_TYPE INTEGER,
	DOMAIN_CATALOG VARCHAR,
	DOMAIN_NAME VARCHAR,
	DOMAIN_SCHEMA VARCHAR,
	ID INTEGER,
	IS_NULLABLE VARCHAR,
	PRECISION INTEGER,
	REMARKS VARCHAR,
	SCALE INTEGER,
	SELECTIVITY INTEGER,
	SQL VARCHAR,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.FUNCTION_ALIASES
(
	ALIAS_CATALOG VARCHAR,
	ALIAS_NAME VARCHAR,
	ALIAS_SCHEMA VARCHAR,
	COLUMN_COUNT INTEGER,
	DATA_TYPE INTEGER,
	ID INTEGER,
	JAVA_CLASS VARCHAR,
	JAVA_METHOD VARCHAR,
	REMARKS VARCHAR,
	RETURNS_RESULT SMALLINT,
	SOURCE VARCHAR,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.FUNCTION_COLUMNS
(
	ALIAS_CATALOG VARCHAR,
	ALIAS_NAME VARCHAR,
	ALIAS_SCHEMA VARCHAR,
	COLUMN_COUNT INTEGER,
	COLUMN_DEFAULT VARCHAR,
	COLUMN_NAME VARCHAR,
	COLUMN_TYPE SMALLINT,
	DATA_TYPE INTEGER,
	JAVA_CLASS VARCHAR,
	JAVA_METHOD VARCHAR,
	NULLABLE SMALLINT,
	POS INTEGER,
	PRECISION INTEGER,
	RADIX SMALLINT,
	REMARKS VARCHAR,
	SCALE SMALLINT,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.HELP
(
	ID INTEGER,
	SECTION VARCHAR,
	SYNTAX VARCHAR,
	TEXT VARCHAR,
	TOPIC VARCHAR
);

create table INFORMATION_SCHEMA.INDEXES
(
	AFFINITY BOOLEAN,
	ASC_OR_DESC VARCHAR,
	CARDINALITY INTEGER,
	COLUMN_NAME VARCHAR,
	CONSTRAINT_NAME VARCHAR,
	FILTER_CONDITION VARCHAR,
	ID INTEGER,
	INDEX_CLASS VARCHAR,
	INDEX_NAME VARCHAR,
	INDEX_TYPE SMALLINT,
	INDEX_TYPE_NAME VARCHAR,
	IS_GENERATED BOOLEAN,
	NON_UNIQUE BOOLEAN,
	ORDINAL_POSITION SMALLINT,
	PAGES INTEGER,
	PRIMARY_KEY BOOLEAN,
	REMARKS VARCHAR,
	SORT_TYPE INTEGER,
	SQL VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.IN_DOUBT
(
	STATE VARCHAR,
	TRANSACTION VARCHAR
);

create table INFORMATION_SCHEMA.KEY_COLUMN_USAGE
(
	COLUMN_NAME VARCHAR,
	CONSTRAINT_CATALOG VARCHAR,
	CONSTRAINT_NAME VARCHAR,
	CONSTRAINT_SCHEMA VARCHAR,
	ORDINAL_POSITION INTEGER,
	POSITION_IN_UNIQUE_CONSTRAINT INTEGER,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.LOCKS
(
	LOCK_TYPE VARCHAR,
	SESSION_ID INTEGER,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.QUERY_STATISTICS
(
	AVERAGE_EXECUTION_TIME DOUBLE,
	AVERAGE_ROW_COUNT DOUBLE,
	CUMULATIVE_EXECUTION_TIME DOUBLE,
	CUMULATIVE_ROW_COUNT BIGINT,
	EXECUTION_COUNT INTEGER,
	MAX_EXECUTION_TIME DOUBLE,
	MAX_ROW_COUNT INTEGER,
	MIN_EXECUTION_TIME DOUBLE,
	MIN_ROW_COUNT INTEGER,
	SQL_STATEMENT VARCHAR,
	STD_DEV_EXECUTION_TIME DOUBLE,
	STD_DEV_ROW_COUNT DOUBLE
);

create table INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS
(
	CONSTRAINT_CATALOG VARCHAR,
	CONSTRAINT_NAME VARCHAR,
	CONSTRAINT_SCHEMA VARCHAR,
	DELETE_RULE VARCHAR,
	MATCH_OPTION VARCHAR,
	UNIQUE_CONSTRAINT_CATALOG VARCHAR,
	UNIQUE_CONSTRAINT_NAME VARCHAR,
	UNIQUE_CONSTRAINT_SCHEMA VARCHAR,
	UPDATE_RULE VARCHAR
);

create table INFORMATION_SCHEMA.RIGHTS
(
	GRANTEDROLE VARCHAR,
	GRANTEE VARCHAR,
	GRANTEETYPE VARCHAR,
	ID INTEGER,
	RIGHTS VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.ROLES
(
	ID INTEGER,
	NAME VARCHAR,
	REMARKS VARCHAR
);

create table INFORMATION_SCHEMA.SCHEMATA
(
	CATALOG_NAME VARCHAR,
	DEFAULT_CHARACTER_SET_NAME VARCHAR,
	DEFAULT_COLLATION_NAME VARCHAR,
	ID INTEGER,
	IS_DEFAULT BOOLEAN,
	REMARKS VARCHAR,
	SCHEMA_NAME VARCHAR,
	SCHEMA_OWNER VARCHAR
);

create table INFORMATION_SCHEMA.SEQUENCES
(
	CACHE BIGINT,
	CURRENT_VALUE BIGINT,
	ID INTEGER,
	INCREMENT BIGINT,
	IS_CYCLE BOOLEAN,
	IS_GENERATED BOOLEAN,
	MAX_VALUE BIGINT,
	MIN_VALUE BIGINT,
	REMARKS VARCHAR,
	SEQUENCE_CATALOG VARCHAR,
	SEQUENCE_NAME VARCHAR,
	SEQUENCE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.SESSIONS
(
	BLOCKER_ID INTEGER,
	CLIENT_ADDR VARCHAR,
	CLIENT_INFO VARCHAR,
	CONTAINS_UNCOMMITTED BOOLEAN,
	ID INTEGER,
	ISOLATION_LEVEL VARCHAR,
	SERVER VARCHAR,
	SESSION_START TIMESTAMP(9, 0),
	STATE VARCHAR,
	STATEMENT VARCHAR,
	STATEMENT_START TIMESTAMP(9, 0),
	USER_NAME VARCHAR
);

create table INFORMATION_SCHEMA.SESSION_STATE
(
	KEY VARCHAR,
	SQL VARCHAR
);

create table INFORMATION_SCHEMA.SETTINGS
(
	NAME VARCHAR,
	VALUE VARCHAR
);

create table INFORMATION_SCHEMA.SYNONYMS
(
	ID INTEGER,
	REMARKS VARCHAR,
	STATUS VARCHAR,
	SYNONYM_CATALOG VARCHAR,
	SYNONYM_FOR VARCHAR,
	SYNONYM_FOR_SCHEMA VARCHAR,
	SYNONYM_NAME VARCHAR,
	SYNONYM_SCHEMA VARCHAR,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.TABLES
(
	ID INTEGER,
	LAST_MODIFICATION BIGINT,
	REMARKS VARCHAR,
	ROW_COUNT_ESTIMATE BIGINT,
	SQL VARCHAR,
	STORAGE_TYPE VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_CLASS VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR,
	TABLE_TYPE VARCHAR,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.TABLE_CONSTRAINTS
(
	CONSTRAINT_CATALOG VARCHAR,
	CONSTRAINT_NAME VARCHAR,
	CONSTRAINT_SCHEMA VARCHAR,
	CONSTRAINT_TYPE VARCHAR,
	INITIALLY_DEFERRED VARCHAR,
	IS_DEFERRABLE VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.TABLE_PRIVILEGES
(
	GRANTEE VARCHAR,
	GRANTOR VARCHAR,
	IS_GRANTABLE VARCHAR,
	PRIVILEGE_TYPE VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR
);

create table INFORMATION_SCHEMA.TABLE_TYPES
(
	TYPE VARCHAR
);

create table INFORMATION_SCHEMA.TRIGGERS
(
	BEFORE BOOLEAN,
	ID INTEGER,
	JAVA_CLASS VARCHAR,
	NO_WAIT BOOLEAN,
	QUEUE_SIZE INTEGER,
	REMARKS VARCHAR,
	SQL VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR,
	TRIGGER_CATALOG VARCHAR,
	TRIGGER_NAME VARCHAR,
	TRIGGER_SCHEMA VARCHAR,
	TRIGGER_TYPE VARCHAR
);

create table INFORMATION_SCHEMA.TYPE_INFO
(
	AUTO_INCREMENT BOOLEAN,
	CASE_SENSITIVE BOOLEAN,
	DATA_TYPE INTEGER,
	MAXIMUM_SCALE SMALLINT,
	MINIMUM_SCALE SMALLINT,
	NULLABLE SMALLINT,
	PARAMS VARCHAR,
	POS INTEGER,
	PRECISION INTEGER,
	PREFIX VARCHAR,
	RADIX INTEGER,
	SEARCHABLE SMALLINT,
	SUFFIX VARCHAR,
	TYPE_NAME VARCHAR
);

create table INFORMATION_SCHEMA.USERS
(
	ADMIN VARCHAR,
	ID INTEGER,
	NAME VARCHAR,
	REMARKS VARCHAR
);

create table INFORMATION_SCHEMA.VIEWS
(
	CHECK_OPTION VARCHAR,
	ID INTEGER,
	IS_UPDATABLE VARCHAR,
	REMARKS VARCHAR,
	STATUS VARCHAR,
	TABLE_CATALOG VARCHAR,
	TABLE_NAME VARCHAR,
	TABLE_SCHEMA VARCHAR,
	VIEW_DEFINITION VARCHAR
);

